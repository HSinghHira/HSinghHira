name: Update Blog Posts

on:
  schedule:
    # Runs every day at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch: # Allows manual triggering

jobs:
  update-blog-posts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install rss-parser
        
    - name: Fetch blog posts and update README
      run: |
        cat << 'EOF' > update-blog.js
        const Parser = require('rss-parser');
        const fs = require('fs');
        
        async function updateBlogPosts() {
          const parser = new Parser();
          
          try {
            console.log('Fetching feed from: https://me.hsinghhira.me/atom.xml');
            const feed = await parser.parseURL('https://me.hsinghhira.me/atom.xml');
            
            console.log('Feed title:', feed.title);
            console.log('Total items found:', feed.items.length);
            
            // Get latest 5 posts
            const posts = feed.items.slice(0, 5);
            console.log('Processing', posts.length, 'posts');
            
            // Generate markdown for blog posts
            let blogPostsMarkdown = '## 📝 Latest Blog Posts\n\n';
            
            posts.forEach(post => {
              const title = post.title;
              const link = post.link;
              const pubDate = new Date(post.pubDate || post.isoDate).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
              });
              
              blogPostsMarkdown += `- [${title}](${link}) - ${pubDate}\n`;
            });
            
            // Read current README.md
            let readmeContent = fs.readFileSync('README.md', 'utf8');
            
            // Define markers for the blog posts section
            const startMarker = '<!-- BLOG-POST-LIST:START -->';
            const endMarker = '<!-- BLOG-POST-LIST:END -->';
            
            // Check if markers exist
            if (readmeContent.includes(startMarker) && readmeContent.includes(endMarker)) {
              // Replace content between markers
              const beforeMarker = readmeContent.split(startMarker)[0];
              const afterMarker = readmeContent.split(endMarker)[1];
              
              readmeContent = beforeMarker + startMarker + '\n' + blogPostsMarkdown + '\n' + endMarker + afterMarker;
            } else {
              // If markers don't exist, append to the end
              readmeContent += '\n\n' + startMarker + '\n' + blogPostsMarkdown + '\n' + endMarker;
            }
            
            // Write updated content back to README.md
            fs.writeFileSync('README.md', readmeContent);
            
            console.log('Blog posts updated successfully!');
            console.log('Updated posts:');
            posts.forEach(post => {
              console.log(`- ${post.title}`);
            });
            
          } catch (error) {
            console.error('Error fetching blog posts:', error);
            process.exit(1);
          }
        }
        
        updateBlogPosts();
        EOF
        
        node update-blog.js
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update blog posts"
          git push
        fi
